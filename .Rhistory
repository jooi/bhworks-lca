summary(fit3)
summary(fit1)
names(fit1)
f=sum(fit3$residuals)-sum(fit1$residuals)/(sum(fit1$residuals)/52)
f
f=(sum(fit3$residuals)-sum(fit1$residuals))/(sum(fit1$residuals)/52)
f
f=((sum(fit3$residuals)-sum(fit1$residuals))/2)/(sum(fit1$residuals)/51)
f
a=c(1,0,1,0,0,0,1,0)
b=c(1,2,0,0,1,1,1,0)
c=c(0,0,0,2,1,0,2,1)
d=c(0,0,0,2,0,2,2,0)
e=c(1,2,0,2,1,0,0,0)
f=c(0,2,2,0,0,0,0,2)
g=c(1,0,1,0,0,0,1,0)
h=c(1,2,0,0,0,0,1,2)
i=c(0,0,0,0,0,0,0,0)
class(a)
as.character(a)
class(a)
a
a=as.character(a)
a
class(a)
criminal=data.frame(a,b,c,d,e,f,g,h,i)
criminal
class(criminal)
names(criminal)
class(criminal$a)
class(criminal$b)
b=as.character(c(1,2,0,0,1,1,1,0))
a=as.character(c(1,0,1,0,0,0,1,0))
b=as.character(c(1,2,0,0,1,1,1,0))
c=as.character(c(0,0,0,2,1,0,2,1))
d=as.character(c(0,0,0,2,0,2,2,0))
e=as.character(c(1,2,0,2,1,0,0,0))
f=as.character(c(0,2,2,0,0,0,0,2))
g=as.character(c(1,0,1,0,0,0,1,0))
h=as.character(c(1,2,0,0,0,0,1,2))
i=as.character(c(0,0,0,0,0,0,0,0))
criminal=data.drame(a,b,c,d,e,f,g,h,i)
criminal=data.frame(a,b,c,d,e,f,g,h,i)
x=as.character(c(1,1,1,1,1,1,1,1))
criminal=data.frame(a,b,c,d,e,f,g,h,i,x)
logit = glm(x ~ a + b + c + d + e + f + g + h + i, data = criminal, family = "binomial")
x=c(1,1,1,1,1,1,1,1)
criminal=data.frame(a,b,c,d,e,f,g,h,i,x)
logit = glm(x ~ a + b + c + d + e + f + g + h + i, data = criminal, family = "binomial")
x=as.character(c(1,1,1,1,1,1,1,1))
criminal=data.frame(a,b,c,d,e,f,g,h,i,x)
install.packages("poLCA")
pdset <- read.csv('1023.csv', header=TRUE)
setwd('/Users/LiYinuo/Desktop/mdlogix/bhworks-lca')
pdset <- read.csv('1023.csv', header=TRUE)
# selecting 7 variables from the PC data
pdset1 <- subset(pdset, Form.Version == "PC 12 to 24"
& BHSSA03a >= 0 & BHSSA02a >= 0 & BHST02 >= 0
& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0,
select=c(BHSSA03a,BHSSA02a,BHST02,BHST03,BHST04,BHSSX05,BHSSX06))
# dichotomize the variables
pdset2 <- apply(pdset1, 2, function(x) ifelse(x > 0, 2, 1))
pdset2 <- as.data.frame(pdset2)
# define function
f <- cbind(BHSSA03a,BHSSA02a,BHST02,BHST03,BHST04,BHSSX05,BHSSX06)~1
# run LCA
LCAmodel <- poLCA(f, pdset2, nclass=2, nrep=20, graphs=TRUE)
library("poLCA", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
LCAmodel <- poLCA(f, pdset2, nclass=2, nrep=20, graphs=TRUE)
# creating new data frame with latent class assigned
pdset3 <- pdset2
pdset3$LCA.Class <- factor(as.character(LCAmodel$predclass))
# conduct logistic regression
model <- glm(LCA.Class ~ BHSSA03a+BHSSA02a+BHST02+BHST03+BHST04+BHSSX05+BHSSX06, data=pdset3, family="binomial")
summary(model)
library(foreign)
dataset = read.spss("/Users/LiYinuo/Desktop/mdlogix/bhworks-lca/Master for LCA_1.sav",
to.data.frame=TRUE)
View(criminal)
dataset = read.spss("/Users/LiYinuo/Desktop/mdlogix/bhworks-lca/joanna_raw.csv",
to.data.frame=TRUE)
dataset = read.csv('/Users/LiYinuo/Desktop/mdlogix/bhworks-lca/joanna_raw.csv',
to.data.frame=TRUE)
dataset = read.csv('/Users/LiYinuo/Desktop/mdlogix/bhworks-lca/joanna_raw.csv',
header=TRUE)
View(dataset)
dataset1 <- subset(dataset, Form.Version == "PC 12 to 24"
#& BHSSA03a >= 0 & BHSSA02a >= 0 & BHST02 >= 0
#& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02a,BHSSA03a,BHSSC02, BHSSC03, BHSSF02,
BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02,
BHST03, BHST04))
dataset1 <- subset(dataset,
# BHSSA03a >= 0 & BHSSA02a >= 0 & BHST02 >= 0
#& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02a,BHSSA03a,BHSSC02, BHSSC03, BHSSF02,
BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02,
BHST03, BHST04))
dataset1 <- subset(dataset,
# BHSSA03a >= 0 & BHSSA02a >= 0 & BHST02 >= 0
#& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02A,BHSSA03A,BHSSC02, BHSSC03, BHSSF02,
BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02,
BHST03, BHST04))
dataset1 <- subset(dataset,
# BHSSA03a >= 0 & BHSSA02a >= 0 & BHST02 >= 0
#& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02A, BHSSA03A, BHSSC02, BHSSC03, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04))
View(dataset1)
dataset1 <- subset(dataset,
BHSSA03a >= 0 & BHSSA02a >= 0 & BHST02 >= 0
& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02A, BHSSA03A, BHSSC02, BHSSC03, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04))
dataset1 <- subset(dataset,
BHSSA03A >= 0 & BHSSA02A >= 0 & BHST02 >= 0
& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02A, BHSSA03A, BHSSC02, BHSSC03, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04))
dataset1 <- subset(dataset,
(BHSSA03A , BHSSA02A) >= 0 & BHST02 >= 0
& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02A, BHSSA03A, BHSSC02, BHSSC03, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04))
C(BHSSA03A,BHSA02A)>0
dataset1[apply(MARGIN = 1, function(x) all(x > 10)), ]
dataset1[dataset1,apply(MARGIN = 1, function(x) all(x >= 0)), ]
dataset1[apply(dataset1, MARGIN = 1, function(x) all(x > 10)), ]
dataset1[apply(dataset1, MARGIN = 1, function(x) all(x >= 0)), ]
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x >= 0)), ]
dataset1 <- subset(dataset,
BHSSA03A >= 0 & BHSSA02A >= 0 & BHST02 >= 0
& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02A, BHSSA03A, BHSSC02, BHSSC03, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04))
dataset1 <- subset(dataset,
#BHSSA03A >= 0 & BHSSA02A >= 0 & BHST02 >= 0
#& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02A, BHSSA03A, BHSSC02, BHSSC03, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04))
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x >= 0)), ]
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(as.numeric(x) = T)), ]
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x >= 0)), ]
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x > 0)), ]
View(dataset2)
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x >= 0)), ]
View(dataset2)
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x < 10)), ]
View(dataset2)
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x >= 1)), ]
View(dataset2)
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x = 0)), ]
dataset1 <- subset(dataset,
#BHSSA03A >= 0 & BHSSA02A >= 0 & BHST02 >= 0
#& BHST03 >= 0 & BHST04 >= 0 & BHSSX05 >= 0 & BHSSX06 >= 0
,select=c(BHSSA02A, BHSSA03A, BHSSC02, BHSSC03, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04))
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x = 0)), ]
View(dataset1)
dataset2 <- dataset1[apply(dataset1, MARGIN = 1, function(x) all(x = NA)), ]
# dichotomize the variables
View(dataset2)
View(dataset2)
apply(dataset1, MARGIN = 1, function(x) all(x >= 0))
apply(dataset1, MARGIN = 1, function(x) all(x =! "NA" ))
apply(dataset1, MARGIN = 1, function(x) all(x != "NA" ))
View(dataset1)
class(dataset1.BHSA02A)
class(dataset1.BHSSA02A)
dataset1.BHSSA02A
BHSSA02A.dataset1
View(dataset1)
dataset1
heads(dataset1)
head(dataset1)
head(dataset1.BHSSA06)
attach(dataset1)
BHSSA02A
detach(dataset1)
BHSSA02A
dataset1$BHSSA02A
class(dataset1$BHSSA02A)
class(dataset1$BHSSA03A)
mydata[!complete.cases(dataset1),]
dataset1[!complete.cases(dataset1),]
dataset2 <- na.omit(dataset1)
View(dataset2)
dataset2$BHSSA02A <- apply(dataset2$BHSSA02A, 2, function(x) ifelse(x > 0, 2, 1))
dataset2$BHSSA02A <- apply(dataset2$BHSSA02A, 1, function(x) ifelse(x > 0, 2, 1))
dataset2$BHSSA02A[dataset2$BHSSA02A>0] <- 1
View(dataset2)
View(dataset2)
View(dataset1)
View(dataset)
dataset1 <- subset(dataset,
select=c(Gender, BHSSA02A, BHSSA03A, BHSSC02, BHSSC03, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04))
# omitting the missing data
dataset2 <- na.omit(dataset1)
attach(dataset2)
if (Gender=1, BHSSX01 !=2) {BHSSX01 <- 1} else {BHSSX01 <- 0}
CLASS(Gender)
clss(gender)
class(Gender)
if (Gender == 1, BHSSX01 !=2) {BHSSX01 <- 1} else {BHSSX01 <- 0}
if (Gender == 1 & BHSSX01 !=2) {BHSSX01 <- 1} else {BHSSX01 <- 0}
if (Gender == 1) & (BHSSX01 !=2) {BHSSX01 <- 1} else {BHSSX01 <- 0}
if ((Gender == 1) & (BHSSX01 !=2)) {BHSSX01 <- 1} else {BHSSX01 <- 0}
BHSSA02A[BHSSA02A>0] <- 1
if ((Gender == 1) && (BHSSX01 !=2)) {BHSSX01 <- 1} else {BHSSX01 <- 0}
View(dataset2)
if ((Gender == 1) && (BHSSX01 !=2)) {BHSSX01 <- 1} else {BHSSX01 <- 0}
attach(dataset2)
BHSSA02A[BHSSA02A>0] <- 1
BHSSA03A[BHSSA03A>0] <- 1
BHSSC02[BHSSC02>0] <- 1
BHSSCFail[BHSSC03<4] <- 0
BHSSCFail[BHSSC03>=4] <- 1
BHSF02[BHSF02>0] <- 1
BHSF05[BHSF05<5] <- 0
BHSF05[BHSF05=5] <- 1
BHSSF02[BHSSF02>0] <- 1
BHSSF04[BHSSF04>0] <- 1
View(dataset2)
dataset2 <- na.omit(dataset1)
attach(dataset2)
detach(dataset2)
attach(dataset2)
BHSSA02A[BHSSA02A>0] <- 1
dataset2$BHSSA02A[BHSSA02A>0] <- 1
View(dataset2)
dataset2$BHSSA03A[BHSSA03A>0] <- 1
View(dataset2)
if ((Gender == 1) && (BHSSX01 !=2)) {dataset2$BHSSX01 <- 1} else {dataset2$BHSSX01 <- 0}
View(dataset2)
dataset2 <- na.omit(dataset1)
attach(dataset2)
dataset2$BHSSA02A[BHSSA02A>0] <- 1
dataset2$BHSSA03A[BHSSA03A>0] <- 1
dataset2$BHSSC02[BHSSC02>0] <- 1
dataset2$BHSSCFail[BHSSC03<4] <- 0
dataset2$BHSSCFail[BHSSC03>=4] <- 1
dataset2$BHSF02[BHSF02>0] <- 1
dataset2$BHSF05[BHSF05<5] <- 0
dataset2$BHSF05[BHSF05=5] <- 1
dataset2$BHSSF02[BHSSF02>0] <- 1
dataset2$BHSSF04[BHSSF04>0] <- 1
if ((Gender == 1) && (BHSSX01 !=2)) {dataset2$BHSSX01 <- 1}
else if ((Gender ==2) && (BHSSX01 != 1)) {dataset2$BHSSX01 <- 0}
else {dataset2$BHSSX01 <- 0}
if ((Gender == 1) && (BHSSX01 !=2)) {dataset2$BHSSX01 <- 1}
else if ((Gender ==2) && (BHSSX01 != 1)) {dataset2$BHSSX01 <- 0}
else {dataset2$BHSSX01 <- 0}
if ((Gender == 1) && (BHSSX01 !=2)) {dataset2$BHSSX01 <- 1}
else if ((Gender ==2) && (BHSSX01 != 1)) {dataset2$BHSSX01 <- 0}
else {dataset2$BHSSX01 <- 0}
if ((Gender == 1) && (BHSSX01 !=2)) {
dataset2$BHSSX01 <- 1
}  else if ((Gender ==2) && (BHSSX01 != 1)) {
dataset2$BHSSX01 <- 0
}  else {dataset2$BHSSX01 <- 0}
View(dataset2)
detach(dataset2)
dataset2 <- na.omit(dataset1)
# dichotomize the variables
attach(dataset2)
dataset2$BHSSA02A[BHSSA02A>0] <- 1
dataset2$BHSSA03A[BHSSA03A>0] <- 1
dataset2$BHSSC02[BHSSC02>0] <- 1
dataset2$BHSSCFail[BHSSC03<4] <- 0
dataset2$BHSSCFail[BHSSC03>=4] <- 1
dataset2$BHSF02[BHSF02>0] <- 1
dataset2$BHSF05[BHSF05<5] <- 0
dataset2$BHSF05[BHSF05=5] <- 1
dataset2$BHSSF02[BHSSF02>0] <- 1
dataset2$BHSSF04[BHSSF04>0] <- 1
if ((Gender == 1) && (BHSSX01 !=2)) {
dataset2$BHSSX01 <- 1
}  else if ((Gender ==2) && (BHSSX01 != 1)) {
dataset2$BHSSX01 <- 0
}  else {dataset2$BHSSX01 <- 0}
View(dataset2)
View(dataset1)
detach(dataset2)
dataset2 <- na.omit(dataset1)
# dichotomize the variables
attach(dataset2)
dataset2$BHSSA02A[BHSSA02A>0] <- 1
dataset2$BHSSA03A[BHSSA03A>0] <- 1
dataset2$BHSSC02[BHSSC02>0] <- 1
dataset2$BHSSCFail[BHSSC03<4] <- 0
dataset2$BHSSCFail[BHSSC03>=4] <- 1
dataset2$BHSF02[BHSF02>0] <- 1
dataset2$BHSF05[BHSF05<5] <- 0
dataset2$BHSF05[BHSF05=5] <- 1
dataset2$BHSSF02[BHSSF02>0] <- 1
dataset2$BHSSF04[BHSSF04>0] <- 1
if ((Gender == 1) && (BHSSX01 !=2)) {
dataset2$BHSSX01 <- 1
}  else if ((Gender ==2) && (BHSSX01 != 1)) {
dataset2$BHSSX01 <- 1
}  else {dataset2$BHSSX01 <- 0}
View(dataset2)
View(dataset1)
View(dataset2)
if ((Gender == 1) && (BHSSX06 !=3)) {
dataset2$BHSSX06 <- 1
}  else if ((Gender ==2) && (BHSSX06 != 4)) {
dataset2$BHSSX06 <- 1
}  else {dataset2$BHSSX06 <- 0}
View(dataset2)
detach(dataset2)
dataset2 <- na.omit(dataset1)
# dichotomize the variables
attach(dataset2)
dataset2$BHSSA02A[BHSSA02A>0] <- 1
dataset2$BHSSA03A[BHSSA03A>0] <- 1
dataset2$BHSSC02[BHSSC02>0] <- 1
dataset2$BHSSCFail[BHSSC03<4] <- 0
dataset2$BHSSCFail[BHSSC03>=4] <- 1
dataset2$BHSF02[BHSF02>0] <- 1
dataset2$BHSF05[BHSF05<5] <- 0
dataset2$BHSF05[BHSF05=5] <- 1
dataset2$BHSSF02[BHSSF02>0] <- 1
dataset2$BHSSF04[BHSSF04>0] <- 1
if ((Gender == 1) && (BHSSX01 !=2)) {
dataset2$BHSSX01 <- 1
}  else if ((Gender ==2) && (BHSSX01 != 1)) {
dataset2$BHSSX01 <- 1
}  else {dataset2$BHSSX01 <- 0}
if ((Gender == 1) && (BHSSX06 !=3)) {
dataset2$BHSSX06 <- 1
}  else if ((Gender ==2) && (BHSSX06 != 4)) {
dataset2$BHSSX06 <- 1
}  else {dataset2$BHSSX06 <- 0}
dataset2$BHSSX05[BHSSX05>0] <- 1
dataset2$BHSSA05[BHSSA05>0] <- 1
dataset2$BHSSA06[BHSSA06>0] <- 1
dataset2$BHSSA07[BHSSA07>0] <- 1
dataset2$BHSSA08[BHSSA08>0] <- 1
dataset2$BHST01[BHST01>0] <- 1
dataset2$BHST02[BHST02>0] <- 1
dataset2$BHST03[BHST03>0] <- 1
dataset2$BHST04[BHST04>0] <- 1
detach(dataset2)
View(dataset2)
dataset2$BHSF05[BHSF05<5] <- 0
dataset2$BHSF05[BHSF05==5] <- 1
View(dataset2)
f <- cbind(BHSSA02A, BHSSA03A, BHSSC02, BHSSCFail, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04)~1
LCAmodel <- poLCA(f, dataset2, nclass=2, nrep=20, graphs=TRUE)
View(dataset2)
dataset3 <- apply(dataset2, 2, function(x) ifelse(x > 0, 2, 1))
dataset3 <- as.data.frame(dataset3)
View(dataset2)
View(dataset3)
LCAmodel <- poLCA(f, dataset3, nclass=2, nrep=20, graphs=TRUE)
dataset3$LCA.Class <- factor(as.character(LCAmodel$predclass))
model <- glm(LCA.Class ~ BHSSA02A+BHSSA03A+BHSSC02+BHSSCFail+BHSF02+BHSF05+
BHSSF02+BHSSF04+BHSSX01+BHSSX06+BHSSX05+BHSSA05+
BHSSA06+BHSSA07+BHSSA08+BHST01+BHST02+BHST03+BHST04, data=dataset3, family="binomial")
summary(model)
LCAmodel <- poLCA(f, dataset3, nclass=2, nrep=100, graphs=TRUE)
LCAmodel <- poLCA(f, dataset3, nclass=2, nrep=20, graphs=TRUE)
LCAmodel <- poLCA(f, dataset3, nclass=2, nrep=500, graphs=TRUE)
LCAmodel <- poLCA(f, dataset3, nclass=2, nrep=100, graphs=TRUE)
# creating new data frame with latent class assigned
dataset3$LCA.Class <- factor(as.character(LCAmodel$predclass))
# conduct logistic regression
model <- glm(LCA.Class ~ BHSSA02A+BHSSA03A+BHSSC02+BHSSCFail+BHSF02+BHSF05+
BHSSF02+BHSSF04+BHSSX01+BHSSX06+BHSSX05+BHSSA05+
BHSSA06+BHSSA07+BHSSA08+BHST01+BHST02+BHST03+BHST04, data=dataset3, family="binomial")
summary(model)
View(dataset2)
View(dataset3)
View(dataset)
f <- cbind(BHSED04, BHSED05, BHSED06, BHSED07)~1
# load the data
attr <- read.csv('1023.csv', header=TRUE, sep=',', stringsAsFactors = FALSE)
# convert all integers into positive integers
attr2 <- subset(attr, Form.Version == "PC 12 to 24"
& BHSED04 >= 0 & BHSED05 >= 0 & BHSED06 >= 0 & BHSED07 >= 0,
select=c(BHSED04, BHSED05, BHSED06, BHSED07))
# transform data into characters, add headers, convert to df
tmp <- sapply(attr2, as.character)
colnames(tmp) <- (c('BHSED04', 'BHSED05', 'BHSED06', 'BHSED07'))
attr3 <- as.data.frame(tmp)
# run LCA
riskmodel <- poLCA(f, attr3, nclass=2, nrep=20, graphs=TRUE)
#riskmodel$probs # this returns the probability table
#riskmodel$predclass # this returns a vector of class assignment
# create new data frame with the classifications
attr4 <- attr3
attr4$LCA.Class <- factor(as.character(riskmodel$predclass))
#converting factor variables into ordinal variables
attr4$BHSED04 <- ordered(attr4$BHSED04, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED05 <- ordered(attr4$BHSED05, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED06 <- ordered(attr4$BHSED06, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED07 <- ordered(attr4$BHSED07, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
# conduct logistic regression
model <- glm(LCA.Class ~ BHSED04+BHSED05+BHSED06+BHSED07, data=attr4, family="binomial")
summary(model)
dataset3 <- lapply(dataset3, as.factor)
class(dataset3)
View(attr3)
header=TRUE)
dataset = read.csv('/Users/LiYinuo/Desktop/mdlogix/bhworks-lca/joanna_raw.csv',
header=TRUE)
# selecting 20 variables from the PC data
dataset1 <- subset(dataset,
select=c(Gender, BHSSA02A, BHSSA03A, BHSSC02, BHSSC03, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04))
# omitting the missing data
dataset2 <- na.omit(dataset1)
# dichotomize the variables
attach(dataset2)
dataset2$BHSSA02A[BHSSA02A>0] <- 1
dataset2$BHSSA03A[BHSSA03A>0] <- 1
dataset2$BHSSC02[BHSSC02>0] <- 1
dataset2$BHSSCFail[BHSSC03<4] <- 0
dataset2$BHSSCFail[BHSSC03>=4] <- 1
dataset2$BHSF02[BHSF02>0] <- 1
dataset2$BHSF05[BHSF05<5] <- 0
dataset2$BHSF05[BHSF05==5] <- 1
dataset2$BHSSF02[BHSSF02>0] <- 1
dataset2$BHSSF04[BHSSF04>0] <- 1
if ((Gender == 1) && (BHSSX01 !=2)) {
dataset2$BHSSX01 <- 1
}  else if ((Gender ==2) && (BHSSX01 != 1)) {
dataset2$BHSSX01 <- 1
}  else {dataset2$BHSSX01 <- 0}
if ((Gender == 1) && (BHSSX06 !=3)) {
dataset2$BHSSX06 <- 1
}  else if ((Gender ==2) && (BHSSX06 != 4)) {
dataset2$BHSSX06 <- 1
}  else {dataset2$BHSSX06 <- 0}
dataset2$BHSSX05[BHSSX05>0] <- 1
dataset2$BHSSA05[BHSSA05>0] <- 1
dataset2$BHSSA06[BHSSA06>0] <- 1
dataset2$BHSSA07[BHSSA07>0] <- 1
dataset2$BHSSA08[BHSSA08>0] <- 1
dataset2$BHST01[BHST01>0] <- 1
dataset2$BHST02[BHST02>0] <- 1
dataset2$BHST03[BHST03>0] <- 1
dataset2$BHST04[BHST04>0] <- 1
detach(dataset2)
# dichotomize the variables
dataset3 <- apply(dataset2, 2, function(x) ifelse(x > 0, 2, 1))
dataset3 <- as.data.frame(dataset3)
View(dataset3)
# define function
f <- cbind(BHSSA02A, BHSSA03A, BHSSC02, BHSSCFail, BHSF02, BHSF05,
BHSSF02, BHSSF04, BHSSX01, BHSSX06, BHSSX05, BHSSA05,
BHSSA06, BHSSA07, BHSSA08, BHST01, BHST02, BHST03, BHST04)~1
# run LCA
LCAmodel <- poLCA(f, dataset3, nclass=2, nrep=100, graphs=TRUE)
# creating new data frame with latent class assigned
dataset3$LCA.Class <- factor(as.character(LCAmodel$predclass))
dataset3 <- lapply(dataset3, as.factor)
class(dataset3)
dataset3 <- as.data.frame(lapply(dataset3, as.factor))
class(dataset3)
class(dataset3$BHSSA02A)
model <- glm(LCA.Class ~ BHSSA02A+BHSSA03A+BHSSC02+BHSSCFail+BHSF02+BHSF05+
BHSSF02+BHSSF04+BHSSX01+BHSSX06+BHSSX05+BHSSA05+
BHSSA06+BHSSA07+BHSSA08+BHST01+BHST02+BHST03+BHST04, data=dataset3, family="binomial")
model <- glm(LCA.Class ~ BHSSA02A+BHSSA03A+BHSSC02+BHSSCFail+BHSF02+BHSF05+
BHSSF02+BHSSF04+BHSSX01+BHSSX06+BHSSX05+BHSSA05+
BHSSA06+BHSSA07+BHSSA08+BHST01+BHST02+BHST03+BHST04, data=dataset3, family="binomial")
View(dataset3)
View(dataset3)
dataset3 <- apply(dataset2, 2, function(x) ifelse(x > 0, 2, 1))
dataset3 <- as.data.frame(dataset3)
LCAmodel <- poLCA(f, dataset3, nclass=2, nrep=100, graphs=TRUE)
dataset3$LCA.Class <- factor(as.character(LCAmodel$predclass))
# conduct logistic regression
model <- glm(LCA.Class ~ BHSSA02A+BHSSA03A+BHSSC02+BHSSCFail+BHSF02+BHSF05+
BHSSF02+BHSSF04+BHSSX01+BHSSX06+BHSSX05+BHSSA05+
BHSSA06+BHSSA07+BHSSA08+BHST01+BHST02+BHST03+BHST04, data=dataset3, family="binomial")
dataset3 <- as.data.frame(lapply(dataset3, as.factor))
class(dataset3)
class(dataset3$BHSSA02A)
dataset3$LCA.Class <- factor(as.character(LCAmodel$predclass))
# conduct logistic regression
model <- glm(LCA.Class ~ BHSSA02A+BHSSA03A+BHSSC02+BHSSCFail+BHSF02+BHSF05+
BHSSF02+BHSSF04+BHSSX01+BHSSX06+BHSSX05+BHSSA05+
BHSSA06+BHSSA07+BHSSA08+BHST01+BHST02+BHST03+BHST04, data=dataset3, family="binomial")
model <- glm(LCA.Class ~ BHSSA02A+BHSSA03A+BHSSC02+BHSSCFail+BHSF02+BHSF05+
BHSSF02+BHSSF04
# +BHSSX01+BHSSX06
+BHSSX05+BHSSA05+
BHSSA06+BHSSA07+BHSSA08+BHST01+BHST02+BHST03+BHST04, data=dataset3, family="binomial")
summary(model)
