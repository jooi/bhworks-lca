diff=data[1:2]-data[3:4]
n=nrow(diff);p=ncol(diff)
xbar=colMeans(diff)
mu0=c(0,0)
sq=cov(diff)
t2=n*t(xbar-mu0)%*%solve(sq)%*%(xbar-mu0);t2
# scaled.t2=(n-p)/(n-1)*p*t2
f=(n-1)*p/(n-p)*qf(0.95,p,n-p);f
# plot confidence ellipse
library(ellipse)
plot(ellipse(sq/n,centre=xbar,level=.95,t=sqrt(f)),type="l",xlab="BOD",ylab="SS",main="95% confidence region")
points(mu0[1],mu0[2],pch=20);text(mu0[1],mu0[2],labels="mu",pos=1)
# plot simultaneous confidence intervals
s_ci=matrix(0,p,2)
for (i in 1:p){
s_ci[i,1]=xbar[i]-sqrt(f)*sqrt(sq[i,i]/n)
s_ci[i,2]=xbar[i]+sqrt(f)*sqrt(sq[i,i]/n)
};s_ci
abline(v=s_ci[1,1],lwd=2,lty="dotted");abline(v=s_ci[1,2],lwd=2,lty="dotted")
abline(h=s_ci[2,1],lwd=2,lty="dotted");abline(h=s_ci[2,2],lwd=2,lty="dotted")
n=40;q=3
xbar=c(46.1,57.3,50.4)
c=matrix(c(1,0,-1,1,0,-1),ncol=3)
sq=matrix(c(101.3,63,71,63,80.2,55.6,71,55.6,97.4),ncol=3)
cx=c%*%xbar;csc=c%*%sq%*%t(c);csc.inv=solve(csc)
t2=n*t(cx)%*%csc.inv%*%cx;t2
f=(n-1)*(q-1)/(n-q+1)*qf(0.95,df1=q-1,df2=n-q+1);f
# (b)
# mu1-mu2 and mu2-mu3
s_ci=matrix(0,2,2)
for (i in 1:2){
s_ci[i,1]=cx[i]-sqrt(f)*sqrt(csc[i,i]/n)
s_ci[i,2]=cx[i]+sqrt(f)*sqrt(csc[i,i]/n)
}
# mu1-mu2 and mu1-mu3, here we change the comparing treatments/matrices
c=matrix(c(1,1,-1,0,0,-1),ncol=3)
cx=c%*%xbar;csc=c%*%sq%*%t(c);csc.inv=solve(csc)
t2=n*t(cx)%*%csc.inv%*%cx;t2
s_ci2=matrix(0,2,2)
for (i in 1:2){
s_ci2[i,1]=cx[i]-sqrt(f)*sqrt(csc[i,i]/n)
s_ci2[i,2]=cx[i]+sqrt(f)*sqrt(csc[i,i]/n)
}
s_ci0=rbind(s_ci,s_ci2[2,]);s_ci0
group1=matrix(c(3,1,2,3,6,3),nrow=3)
group2=matrix(c(2,5,3,2,3,1,1,3), nrow=4)
n1=nrow(group1);n2=nrow(group2);p=ncol(group1)
m1=colMeans(group1);m2=colMeans(group2);mu=c(0,0)
s1=var(group1);s2=var(group2)
spool=((n1-1)/(n1+n2-2)*s1)+((n2-1)/(n1+n2-2)*s2);spool
t2=t(m1-m2-mu)%*%solve((1/n1+1/n2)*spool)%*%(m1-m2-mu);t2
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(.99,df1=p,df2=n1+n2-p-1);f
s_ci=matrix(0,2,2);
for (i in 1:2){
s_ci[i,1]=(m1-m2)[i]-sqrt(f)*sqrt(spool[i,i]*(1/n1+1/n2))
s_ci[i,2]=(m1-m2)[i]+sqrt(f)*sqrt(spool[i,i]*(1/n1+1/n2))
};s_ci
#Problem1
time=c(25,22,30,35,25,32,37,35,25,30,20,25,28,34,28,27,38,31,20,23)
half=c("A","P","A","P","A","P","A","P","A","P","A","P","A","P","A","P","A","P","A","P")
data=data.frame(time,half)
attach(data)
t.test(time~half)
library(alr3); data(fuel2001)
dataf=data(fuel2001)
library(alr3); data(fuel2001)
dataf=data(fuel2001)
dataf
library(alr4); data(fuel2001)
install.packages("alr4")
library("alr4", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:alr3", unload=TRUE)
library(alr4); data(fuel2001)
dataf=data(fuel2001)
library(alr4); data(fuel2001)
dataf=data(fuel2001)
library(alr4); data(fuel2001)
fuel2001$Fuel <- 1000*fuel2001$FuelC/fuel2001$Pop
fuel2001$Fuel=1000*fuel2001$FuelC/fuel2001$Pop
Fuel=1000*fuel2001$FuelC/fuel2001$Pop
View(fuel2001)
income=fuel2001$income
income=fuel2001$Income
Income=fuel2001$Income
logMiles=log(Fuel2001$Miles)
logMiles=log(fuel2001$Miles)
lmc=lm(Fuel~Income+logMiles, data=fuel2001)
m1=lm(Fuel~Income+logMiles, data=fuel2001)
summary(m1)
sqIncome=square(Income)
sqIncome=Income^2
m2=lm(Fuel~Income+sqIncome+logMiles)
summary(m2)
library(alr4); data(fuel2001)
Fuel=1000*fuel2001$FuelC/fuel2001$Pop
Income=fuel2001$Income
logMiles=log(fuel2001$Miles)
m1=lm(Fuel~Income+logMiles, data=fuel2001)
summary(m1)
sqIncome=Income^2
m2=lm(Fuel~Income+sqIncome+logMiles)
summary(m2)
m2=lm(Fuel~sqIncome+logMiles)
summary(m2)
summary(m1)
plot(m1)
plot(m2)
m1=lm(Fuel~Income+logMiles+Income*logMiles, data=fuel2001)
summary(m1)
m2=lm(Fuel~sqIncome+logMiles+sqIncome*logMiles)
summary(m2)
?backwar
?backward
??backward
??selection
m1=lm(Fuel~Income+logMiles, data=fuel2001)
summary(m1)
m2=lm(Fuel~sqIncome+logMiles)
summary(m2)
anova(m1)
anova(m2)
m1=lm(Fuel~1)
summary(m1)
m2=lm(Fuel~sqIncome+logMiles-1)
summary(m2)
m1=lm(Fuel~Income+logMiles-1)
summary(m1)
m2=lm(Fuel~sqIncome+logMiles-1)
summary(m2)
plot(m1)
plot(m2)
m2=lm(Fuel~Income+sqIncome+logMiles-1)
summary(m2)
library(alr4); data(fuel2001)
Fuel=1000*fuel2001$FuelC/fuel2001$Pop
Income=fuel2001$Income
logMiles=log(fuel2001$Miles)
m1=lm(Fuel~Income+logMiles-1)
summary(m1)
plot(m1)
library(alr4); data(fuel2001)
Fuel=1000*fuel2001$FuelC/fuel2001$Pop
Income=fuel2001$Income
logMiles=log(fuel2001$Miles)
m1=lm(Fuel~Income+logMiles-1)
summary(m1)
sqIncome=Income^2
m2=lm(Fuel~Income+sqIncome+logMiles-1)
summary(m2)
data=read.table("/Users/LiYinuo/Desktop/R/T6-1.DAT")
View(data)
x=matrix(c(rep(1,58),QuizAve, CompAve, MidTerm),ncol=4)
header=TRUE, quote="\"")
header=TRUE, quote="\"")
header=TRUE, quote="\"")
header=TRUE, quote="\"")
Final.Project=read.table("~/Desktop/GWU/6218/final project/Final Project.txt",
header=TRUE, quote="\"")
attach(Final.Project)
fit=lm(FinalExam~QuizAve+CompAve+MidTerm)
x=matrix(c(rep(1,58),QuizAve, CompAve, MidTerm),ncol=4)
y=matrix(FinalExam, ncol=1)
bhat=chol2inv(chol(t(x)%*%x)) %*% t(x) %*% y
bhat
summary(fit)
newdata=data.frame(QuizAve=8.5, CompAve=5, MidTerm=60)
predict(fit,newdata)
Final.Project=read.table("~/Desktop/GWU/6218/final project/Final Project.txt",
anova.out=aov(FinalExam~QuizAve+CompAve+MidTerm)
anova.out
anova.out=aov(FinalExam~QuizAve+CompAve+MidTerm)
anova.out
anova.out=aov(FinalExam~QuizAve+CompAve+MidTerm, test=F)
anova.out=manov(FinalExam~QuizAve+CompAve+MidTerm, test=F)
anova.out=manova(FinalExam~QuizAve+CompAve+MidTerm)
names(fit)
residuals
fit$residuals
abs(fit$residuals)
max(abs(fit$residuals))
anova(fit)
names(anova(fit))
anova=anova(fit)
names(anova)
sum(Sum Sq$anova)
sum(SumSq$anova)
sum(Sum_Sq$anova)
sum("Sum Sq"$anova)
sum(anova$"Sum Sq")
confint(fit)
newdata19=data.frame(QuizAve=mean(QuizAve),CompAve=mean(CompAve),MidTerm=mean(MidTerm))
predict(fit,newdata19,interval="confidence")
fit1=lm(FinalExam~QuizAve+CompAve+MidTerm+Race+Sex)
summary(fit1)
Final.Project=read.table("~/Desktop/GWU/6218/final project/Final Project.txt",
header=TRUE, quote="\"")
summary(Final.Project)
attach(Final.Project)
fit=lm(FinalExam~QuizAve+CompAve+MidTerm)
summary(fit)
y=matrix(FinalExam, ncol=1)
x=matrix(c(rep(1,58),QuizAve, CompAve, MidTerm),ncol=4)
bhat=chol2inv(chol(t(x)%*%x)) %*% t(x) %*% y
bhat
newdata=data.frame(QuizAve=8.5, CompAve=5, MidTerm=60)
predict(fit,newdata)
names(fit)
max(abs(fit$residuals))
anova=anova(fit)
names(anova)
sum(anova$"Sum Sq")
confint(fit)
newdata19=data.frame(QuizAve=mean(QuizAve),CompAve=mean(CompAve),MidTerm=mean(MidTerm))
predict(fit,newdata19,interval="confidence")
fit1=lm(FinalExam~QuizAve+CompAve+MidTerm+Race+Sex)
summary(fit1)
fit2=lm(FinalExam~QuizAve+CompAve+MidTerm+Race)
summary(fit2)
fit3=lm(FinalExam~QuizAve+CompAve+MidTerm+Sex)
summary(fit3)
summary(fit1)
fit3=lm(FinalExam~QuizAve+CompAve+MidTerm+Sex)
fit4=lm(FinalExam~CompAve+MidTerm+Race+Sex)
summary(fit4)
plot(fit1)
fit5=lm(FinalExam~QuizAve+CompAve+MidTerm+Race+Sex+Race*Sex)
summary(fit5)
fit5=lm(FinalExam~QuizAve+CompAve+MidTerm+Race+Race*Sex)
summary(fit5)
fit5=lm(FinalExam~QuizAve+CompAve+MidTerm+Race+Race*Sex)
summary(fit5)
fit5=lm(FinalExam~QuizAve+MidTerm+Race+Race*Sex)
summary(fit5)
fit5=lm(FinalExam~QuizAve+MidTerm+Race+Race*Sex-1)
summary(fit5)
fit5=lm(FinalExam~1+QuizAve+MidTerm+Race+Race*Sex-1)
summary(fit5)
fit5=lm(FinalExam~QuizAve+MidTerm+Race+Race*Sex-1)
summary(fit5)
summary(fit1)
Final.Project$Race1=ifelse(Race==B, B, ifelse(Race==A, NB, ifelse(Race==C,NB,NA))
view(Final.Project)
Final.Project
Final.Project$Race1=ifelse(Race==B, B, ifelse(Race==A, NB, ifelse(Race==C,NB,NA))
Final.Project
Final.Project$Race1=ifelse(Race==B, B, ifelse(Race==A, NB, ifelse(Race==C,NB,NA))
fit5=lm(FinalExam~QuizAve+MidTerm+Race+Race*Sex-1)
Final.Project$Race1=ifelse(Race==B, B, ifelse(Race==A, NB, ifelse(Race==C,NB,NA))
Final.Project1=Final.Project
Final.Project=read.table("~/Desktop/GWU/6218/final project/Final Project.txt",
header=TRUE, quote="\"")
Final.Project1=Final.Project
Final.Project1$Race1=ifelse(Race==B, B, ifelse(Race==A, NB, ifelse(Race==C,NB,NA))
Final.Project1$Race1=ifelse(Race==B, B, ifelse(Race==A, NB, ifelse(Race==C,NB,NA))
Final.Project1$Race=ifelse(Race==B, B, ifelse(Race==A, NB, ifelse(Race==C,NB,NA))
Final.Project1$Race=ifelse(Race==B, B, ifelse(Race==A, NB, ifelse(Race==C,NB,NA))
View(Final.Project1)
Final.Project1$Race=ifelse(Final.Project$Race==B, B, ifelse(Final.Project$Race==A, NB, ifelse(Final.Project$Race==C,NB,NA))
Final.Project1$Race=ifelse(Final.Project$Race==B, B, ifelse(Final.Project$Race==A, NB, ifelse(Final.Project$Race==C,NB,NA))
Final.Project1$Race
Final.Project1$Race=ifelse(Final.Project$Race==B, B, NA)
Final.Project1$Race=ifelse(Final.Project$Race=='B', 'B', NA)
Final.Project1$Race=ifelse(Final.Project$Race=='B', 'B', ifelse(Final.Project$Race=='A', 'NB', ifelse(Final.Project$Race=='C','NB',NA))
Final.Project1$Race=ifelse(Final.Project$Race=='B', 'B', ifelse(Final.Project$Race=='A', 'NB', ifelse(Final.Project$Race=='C','NB',NA))
Final.Project1$Race=ifelse(Final.Project$Race=='B', 'B', ifelse(Final.Project$Race=='A', 'NB',NA))
View(Final.Project1)
Final.Project1$Race=ifelse(Final.Project$Race=='B', 'B', ifelse(Final.Project$Race=='A', 'NB', ifelse(Final.Project$Race=='C','NB',NA))))
Final.Project1$Race=ifelse(Final.Project$Race=='B', 'B', ifelse(Final.Project$Race=='A', 'NB', ifelse(Final.Project$Race=='C','NB',NA)))
fit6=lm(FinalExam~QuizAve+CompAve+MidTerm+Race+Sex+Race*Sex)
summary(fit6)
fit6=lm(FinalExam~QuizAve+CompAve+MidTerm+Race+Sex+Race*Sex, dataset=Final.Project1)
Final.Project=read.table("~/Desktop/GWU/6218/final project/Final Project.txt",
header=TRUE, quote="\"")
F1=Final.Project
F11$Race=ifelse(F1$Race=='B', 'B', ifelse(F1$Race=='A', 'NB', ifelse(F1$Race=='C','NB',NA)))
F1$Race=ifelse(F1$Race=='B', 'B', ifelse(F1$Race=='A', 'NB', ifelse(F1$Race=='C','NB',NA)))
fit6=lm(F1$FinalExam~F1$QuizAve+F1$CompAve+F1$MidTerm+F1$Race+F1$Sex+F1$Race*F1$Sex)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$MidTerm+F1$Race+F1$Sex+F1$Race*F1$Sex)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$MidTerm+F1$Race+F1$Race*F1$Sex)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$MidTerm+F1$Race+F1$Race*F1$Sex)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$MidTerm+F1$Race)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$MidTerm+F1$Race+F1$Sex*F1$Race)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$MidTerm+F1$Race)
summary(fit6)
summary(fit2)
fit3=lm(FinalExam~QuizAve+MidTerm+Sex)
summary(fit3)
fit2=lm(FinalExam~QuizAve+MidTerm+Race)
summary(fit2)
summary(fit6)
summary(fit1)
summary(fit2)
summary(fit6)
plot(fit6)
summary(fit1)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$MidTerm+F1$Race-1)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$MidTerm+F1$Race)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve++F1$CompAve+F1$MidTerm+F1$Race)
summary(fit6)
fit1=lm(FinalExam~QuizAve+CompAve+MidTerm+Race+Sex)
summary(fit1)
fit2=lm(FinalExam~QuizAve++CompAve+MidTerm+Race)
summary(fit2)
fit2=lm(FinalExam~QuizAve+MidTerm+Race)
summary(fit2)
fit2=lm(FinalExam~QuizAve+CompAve*QuizAve+MidTerm+Race)
summary(fit2)
fit6=lm(F1$FinalExam~F1$QuizAve++F1$CompAve+F1$MidTerm+F1$Race)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$MidTerm+F1$Race)
summary(fit6)
fit6=lm(F1$FinalExam~F1$QuizAve+F1$CompAve+F1$MidTerm+F1$Race)
predict(fit,newdata19,interval="confidence")
summary(fit6)
fit3=lm(FinalExam~QuizAve+CompAve+MidTerm+Sex)
summary(fit3)
summary(fit1)
names(fit1)
f=sum(fit3$residuals)-sum(fit1$residuals)/(sum(fit1$residuals)/52)
f
f=(sum(fit3$residuals)-sum(fit1$residuals))/(sum(fit1$residuals)/52)
f
f=((sum(fit3$residuals)-sum(fit1$residuals))/2)/(sum(fit1$residuals)/51)
f
a=c(1,0,1,0,0,0,1,0)
b=c(1,2,0,0,1,1,1,0)
c=c(0,0,0,2,1,0,2,1)
d=c(0,0,0,2,0,2,2,0)
e=c(1,2,0,2,1,0,0,0)
f=c(0,2,2,0,0,0,0,2)
g=c(1,0,1,0,0,0,1,0)
h=c(1,2,0,0,0,0,1,2)
i=c(0,0,0,0,0,0,0,0)
class(a)
as.character(a)
class(a)
a
a=as.character(a)
a
class(a)
criminal=data.frame(a,b,c,d,e,f,g,h,i)
criminal
class(criminal)
names(criminal)
class(criminal$a)
class(criminal$b)
b=as.character(c(1,2,0,0,1,1,1,0))
a=as.character(c(1,0,1,0,0,0,1,0))
b=as.character(c(1,2,0,0,1,1,1,0))
c=as.character(c(0,0,0,2,1,0,2,1))
d=as.character(c(0,0,0,2,0,2,2,0))
e=as.character(c(1,2,0,2,1,0,0,0))
f=as.character(c(0,2,2,0,0,0,0,2))
g=as.character(c(1,0,1,0,0,0,1,0))
h=as.character(c(1,2,0,0,0,0,1,2))
i=as.character(c(0,0,0,0,0,0,0,0))
criminal=data.drame(a,b,c,d,e,f,g,h,i)
criminal=data.frame(a,b,c,d,e,f,g,h,i)
x=as.character(c(1,1,1,1,1,1,1,1))
criminal=data.frame(a,b,c,d,e,f,g,h,i,x)
logit = glm(x ~ a + b + c + d + e + f + g + h + i, data = criminal, family = "binomial")
x=c(1,1,1,1,1,1,1,1)
criminal=data.frame(a,b,c,d,e,f,g,h,i,x)
logit = glm(x ~ a + b + c + d + e + f + g + h + i, data = criminal, family = "binomial")
x=as.character(c(1,1,1,1,1,1,1,1))
criminal=data.frame(a,b,c,d,e,f,g,h,i,x)
install.packages("poLCA")
# set up environment
# setwd("C:/Users/Gavyn/Documents/R/BH-Works/LCA/bhworks-lca")
library(poLCA)
#define function
f <- cbind(BHSED04, BHSED05, BHSED06, BHSED07)~1
# load the data
attr <- read.csv('1023.csv', header=TRUE, sep=',', stringsAsFactors = FALSE)
# convert all integers into positive integers
attr2 <- subset(attr, Form.Version == "PC 12 to 24", select=c(BHSED04, BHSED05, BHSED06, BHSED07))
# transform data into characters, add headers, convert to df
tmp <- sapply(attr2, as.character)
colnames(tmp) <- (c('BHSED04', 'BHSED05', 'BHSED06', 'BHSED07'))
attr3 <- as.data.frame(tmp)
# run LCA
riskmodel <- poLCA(f, attr3, nclass=2, nrep=20, graphs=TRUE)
library(poLCA)
f <- cbind(BHSED04, BHSED05, BHSED06, BHSED07)~1
# load the data
attr <- read.csv('1023.csv', header=TRUE, sep=',', stringsAsFactors = FALSE)
setwd("/Users/LiYinuo/Desktop/mdlogix/bhworks-lca")
attr <- read.csv('1023.csv', header=TRUE, sep=',', stringsAsFactors = FALSE)
# convert all integers into positive integers
attr2 <- subset(attr, Form.Version == "PC 12 to 24", select=c(BHSED04, BHSED05, BHSED06, BHSED07))
# transform data into characters, add headers, convert to df
tmp <- sapply(attr2, as.character)
colnames(tmp) <- (c('BHSED04', 'BHSED05', 'BHSED06', 'BHSED07'))
attr3 <- as.data.frame(tmp)
# run LCA
riskmodel <- poLCA(f, attr3, nclass=2, nrep=20, graphs=TRUE)
attr4 <- attr3
attr4$LCA.Class <- factor(as.character(riskmodel$predclass))
# conduct logistic regression
model <- glm(LCA.Class ~., family=binomial(link='logit'), data=attr4)
summary(model)
View(attr4)
attr2 <- subset(attr, Form.Version == "PC 12 to 24"
& BHSED04 > 0 & BHSED05 > 0 & BHSED06 > 0 & BHSED07 > 0,
select=c(BHSED04, BHSED05, BHSED06, BHSED07))
tmp <- sapply(attr2, as.character)
colnames(tmp) <- (c('BHSED04', 'BHSED05', 'BHSED06', 'BHSED07'))
attr3 <- as.data.frame(tmp)
# run LCA
riskmodel <- poLCA(f, attr3, nclass=2, nrep=20, graphs=TRUE)
attr2 <- subset(attr, Form.Version == "PC 12 to 24"
& BHSED04 >= 0 & BHSED05 >= 0 & BHSED06 >= 0 & BHSED07 >= 0,
select=c(BHSED04, BHSED05, BHSED06, BHSED07))
tmp <- sapply(attr2, as.character)
colnames(tmp) <- (c('BHSED04', 'BHSED05', 'BHSED06', 'BHSED07'))
attr3 <- as.data.frame(tmp)
# run LCA
riskmodel <- poLCA(f, attr3, nclass=2, nrep=20, graphs=TRUE)
#riskmodel$probs # this returns the probability table
#riskmodel$predclass # this returns a vector of class assignment
# create new data frame with the classifications
attr4 <- attr3
attr4$LCA.Class <- factor(as.character(riskmodel$predclass))
# conduct logistic regression
model <- glm(LCA.Class ~., family=binomial(link='logit'), data=attr4)
summary(model)
ordered(attr4$BHSED04,
levels = c(0,2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED04 <- ordered(attr4$BHSED04,
+         levels = c(0,2, 4),
+         labels = c("Never", "Sometimes", "Often"))
attr4$BHSED04 <- ordered(attr4$BHSED04,
+         levels = c(0,2, 4),
+         labels = c("Never", "Sometimes", "Often"))
attr4$BHSED04 <- ordered(attr4$BHSED04, levels = c(0,2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED04 <- ordered(attr4$BHSED04, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED05 <- ordered(attr4$BHSED05, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED06 <- ordered(attr4$BHSED06, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED07 <- ordered(attr4$BHSED07, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
model <- glm(LCA.Class ~., family=binomial(link='logit'), data=attr4)
summary(model)
View(attr4)
# set up environment
# setwd("C:/Users/Gavyn/Documents/R/BH-Works/LCA/bhworks-lca")
library(poLCA)
#define function
f <- cbind(BHSED04, BHSED05, BHSED06, BHSED07)~1
# load the data
attr <- read.csv('1023.csv', header=TRUE, sep=',', stringsAsFactors = FALSE)
# convert all integers into positive integers
attr2 <- subset(attr, Form.Version == "PC 12 to 24"
& BHSED04 >= 0 & BHSED05 >= 0 & BHSED06 >= 0 & BHSED07 >= 0,
select=c(BHSED04, BHSED05, BHSED06, BHSED07))
# transform data into characters, add headers, convert to df
tmp <- sapply(attr2, as.character)
colnames(tmp) <- (c('BHSED04', 'BHSED05', 'BHSED06', 'BHSED07'))
attr3 <- as.data.frame(tmp)
# run LCA
riskmodel <- poLCA(f, attr3, nclass=2, nrep=20, graphs=TRUE)
#riskmodel$probs # this returns the probability table
#riskmodel$predclass # this returns a vector of class assignment
# create new data frame with the classifications
attr4 <- attr3
attr4$LCA.Class <- factor(as.character(riskmodel$predclass))
#converting factor variables into ordinal variables
attr4$BHSED04 <- ordered(attr4$BHSED04, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED05 <- ordered(attr4$BHSED05, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED06 <- ordered(attr4$BHSED06, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
attr4$BHSED07 <- ordered(attr4$BHSED07, levels = c(0, 2, 4),
labels = c("Never", "Sometimes", "Often"))
# conduct logistic regression
model <- glm(LCA.Class ~., family=binomial(link='logit'), data=attr4)
summary(model)
# establish train
#train <- attr4
# establish test
#tmp <- read.csv('test.csv', header=TRUE, sep=',', stringsAsFactors = FALSE)
#test <- subset(tmp, Form.Version == "PC 12 to 24", select=c(BHSED04, BHSED05, BHSED06, BHSED07))
#test <- sapply(test, as.character)
#colnames(test) <- (c('BHSED04', 'BHSED05', 'BHSED06', 'BHSED07'))
#test <- as.data.frame(test)
#riskmodeltest <- poLCA(f, test, nclass=2, nrep=20, graphs=TRUE)
View(attr4)
model <- glm(LCA.Class ~., family=binomial(link='logit'), data=attr4)
model <- glm(LCA.Class ~ BHSED04+BHSED05+BHSED06+BHSED07, family=binomial(link='logit'), data=attr4)
model <- glm(LCA.Class ~ BHSED04+BHSED05+BHSED06+BHSED07, data=attr4, family="binomial")
is.character(LCA.Class)
is.character(attr4$LCA.Class)
is.numeric(attr$LCA.Class)
class(attr$LCA.Class)
is.numeric(attr4$LCA.Class)
class(attr4$LCA.Class)
class(attr4)
names(attr4)
str(attr4)
